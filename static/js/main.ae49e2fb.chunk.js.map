{"version":3,"sources":["Dashboard/Dashboard.module.css","Dashboard/Map/fetchData.js","Dashboard/Map/Map.jsx","Dashboard/Dashboard.jsx","About/About.jsx","App.js","index.js"],"names":["module","exports","fetchData","areaURL","userURL","setRevenueData","setGeneralData","setAreas","a","revenueData","generalData","axios","get","then","res","allUsers","data","users","proUsers","filter","user","is_pro_user","totalUsers","length","totalMaleUsers","gender","totalFemaleUsers","totalMatches","total_matches","totalProUsers","totalMaleProUsers","totalFemaleProUsers","totalProMatches","totalRevPercentage","toFixed","forEach","area_id","age","male","female","totalAge","revPercentage","fetch","json","new_areas","area","properties","mapboxgl","workerClass","require","default","Map","props","areaData","setAreaData","proData","setProData","genData","setGenData","useState","longitude","latitude","width","height","minZoom","pitch","viewport","setViewport","areas","useEffect","mapData","mapType","selectedArea","useMemo","generalLayerStyle","id","type","paint","property","stops","proLayerStyle","source","highlightLayerStyle","getCursor","isHovering","isDragging","onViewportChange","newviewport","mapStyle","mapboxApiAccessToken","onClick","e","features","areaName","name","avgAge","TabPane","Dashboard","className","styles","rowStretch","gutter","justify","align","xs","order","md","defaultActiveKey","centered","tab","key","span","style","backgroundColor","bordered","prefix","title","value","precision","suffix","display","justifyContent","color","Title","About","alignItems","flexDirection","href","Header","Content","Footer","Sider","App","isAbout","setIsAbout","breakpoint","collapsedWidth","minHeight","justifyItems","theme","mode","defaultSelectedKeys","Item","icon","VideoCameraOutlined","UserOutlined","GithubOutlined","padding","level","margin","textAlign","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae49e2fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"rowStretch\":\"Dashboard_rowStretch__25m3T\"};","import axios from \"axios\";\n\nconst fetchData = async (\n  areaURL,\n  userURL,\n  setRevenueData,\n  setGeneralData,\n  setAreas\n) => {\n  let revenueData = {};\n  let generalData = {};\n  await axios.get(userURL).then((res) => {\n    let allUsers = res.data.users;\n    let proUsers = allUsers.filter((user) => {\n      return user.is_pro_user;\n    });\n\n    //total info for General Map\n    let totalUsers = allUsers.length;\n    let totalMaleUsers = allUsers.filter((user) => {\n      return user.gender === \"M\";\n    }).length;\n    let totalFemaleUsers = allUsers.filter((user) => {\n      return user.gender === \"F\";\n    }).length;\n    let totalMatches = allUsers.filter((user) => {\n      return user.total_matches;\n    }).length;\n\n    //total info for Revenue Map\n    let totalProUsers = proUsers.length;\n    let totalMaleProUsers = proUsers.filter((user) => {\n      return user.gender === \"M\";\n    }).length;\n    let totalFemaleProUsers = proUsers.filter((user) => {\n      return user.gender === \"F\";\n    }).length;\n    let totalProMatches = proUsers.filter((user) => {\n      return user.total_matches;\n    }).length;\n    let totalRevPercentage = ((totalProUsers / totalUsers) * 100).toFixed(1);\n\n    allUsers.forEach((user) => {\n      if (!(user.area_id in generalData)) {\n        generalData[user.area_id] = {\n          totalUsers: 0,\n          male: 0,\n          female: 0,\n          total_matches: 0,\n          totalAge: 0,\n        };\n      } else {\n        generalData[user.area_id][\"totalUsers\"]++;\n        generalData[user.area_id][\"totalAge\"] += user.age;\n\n        if (user.gender === \"M\") generalData[user.area_id][\"male\"]++;\n        else generalData[user.area_id][\"female\"]++;\n\n        if (user.total_matches) generalData[user.area_id][\"total_matches\"]++;\n      }\n    });\n    proUsers.forEach((user) => {\n      if (!(user.area_id in revenueData)) {\n        revenueData[user.area_id] = {\n          totalUsers: 0,\n          male: 0,\n          female: 0,\n          revPercentage: 0,\n          total_matches: 0,\n        };\n      } else {\n        revenueData[user.area_id][\"totalUsers\"] =\n          revenueData[user.area_id][\"totalUsers\"] + 1;\n\n        if (user.gender === \"M\") revenueData[user.area_id][\"male\"]++;\n        else revenueData[user.area_id][\"female\"]++;\n\n        revenueData[user.area_id][\"revPercentage\"] = (\n          (revenueData[user.area_id][\"totalUsers\"] / proUsers.length) *\n          100\n        ).toFixed(2);\n\n        if (user.total_matches) revenueData[user.area_id][\"total_matches\"]++;\n      }\n    });\n    revenueData[0] = {\n      totalUsers: totalProUsers,\n      male: totalMaleProUsers,\n      female: totalFemaleProUsers,\n      total_matches: totalProMatches,\n      totalRevPercentage: totalRevPercentage,\n    };\n    generalData[0] = {\n      totalUsers: totalUsers,\n      male: totalMaleUsers,\n      female: totalFemaleUsers,\n      total_matches: totalMatches,\n    };\n    setRevenueData(revenueData);\n    setGeneralData(generalData);\n  });\n\n  await fetch(areaURL)\n    .then((res) => res.json())\n    .then((new_areas) => {\n      new_areas[\"features\"].forEach((area) => {\n        area[\"properties\"][\"totalProUsers\"] =\n          revenueData[area.properties.area_id][\"totalUsers\"];\n        area[\"properties\"][\"totalGeneralUsers\"] =\n          generalData[area.properties.area_id][\"totalUsers\"];\n      });\n      setAreas(new_areas);\n    });\n};\n\nexport default fetchData;\n","import React, { useEffect, useState, useMemo } from \"react\";\nimport ReactMapGL, { Source, Layer } from \"react-map-gl\";\nimport fetchData from \"./fetchData\";\nimport mapboxgl from \"mapbox-gl/dist/mapbox-gl\";\n\nmapboxgl.workerClass =\n  require(\"worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker\").default;\n\nconst Map = (props) => {\n  let { areaData, setAreaData, proData, setProData, genData, setGenData } =\n    props;\n  const [viewport, setViewport] = useState({\n    longitude: 77.6,\n    latitude: 12.94,\n    width: \"35vw\",\n    height: \"65vh\",\n    minZoom: 10,\n    pitch: 42,\n  });\n  const [areas, setAreas] = useState();\n\n  useEffect(\n    () =>\n      fetchData(\n        \"https://kyupid-api.vercel.app/api/areas\",\n        \"https://kyupid-api.vercel.app/api/users\",\n        setProData,\n        setGenData,\n        setAreas\n      ),\n    [setProData, setGenData]\n  );\n\n  let mapData = props.mapType === \"pro\" ? proData : genData;\n\n  function getCursor({ isHovering, isDragging }) {\n    return isDragging ? \"grabbing\" : isHovering ? \"pointer\" : \"default\";\n  }\n  const selectedArea = (areaData && areaData.area_id) || \"\";\n  const filter = useMemo(() => [\"in\", \"area_id\", selectedArea], [selectedArea]);\n\n  const generalLayerStyle = {\n    id: \"area\",\n    type: \"fill\",\n    paint: {\n      \"fill-outline-color\": \"rgb(52,51,50)\",\n      \"fill-color\": {\n        property: \"totalGeneralUsers\",\n        stops: [\n          [90, \"#E0AAFF\"],\n          [120, \"#C77DFF\"],\n          [150, \"#9D4EDD\"],\n          [180, \"#7B2CBF\"],\n          [220, \"#5A189A\"],\n          [250, \"#3C096C\"],\n          [280, \"#240046\"],\n          [300, \"#10002B\"],\n        ],\n      },\n    },\n  };\n  const proLayerStyle = {\n    id: \"area\",\n    type: \"fill\",\n    source: \"my-data\",\n    paint: {\n      // // \"fill-opacity\": 0.7,\n      \"fill-outline-color\": \"rgb(52,51,50)\",\n      \"fill-color\": {\n        property: \"totalProUsers\",\n        stops: [\n          [90, \"#E0AAFF\"],\n          [120, \"#C77DFF\"],\n          [150, \"#9D4EDD\"],\n          [180, \"#7B2CBF\"],\n          [220, \"#5A189A\"],\n          [250, \"#3C096C\"],\n          [280, \"#240046\"],\n          [300, \"#10002B\"],\n        ],\n      },\n    },\n  };\n  const highlightLayerStyle = {\n    id: \"area_highlight\",\n    type: \"fill-extrusion\",\n    paint: {\n      \"fill-extrusion-color\":\n        props.mapType === \"pro\"\n          ? {\n              property: \"totalProUsers\",\n              stops: [\n                [90, \"#E0AAFF\"],\n                [120, \"#C77DFF\"],\n                [150, \"#9D4EDD\"],\n                [180, \"#7B2CBF\"],\n                [220, \"#5A189A\"],\n                [250, \"#3C096C\"],\n                [280, \"#240046\"],\n                [300, \"#10002B\"],\n              ],\n            }\n          : {\n              property: \"totalGeneralUsers\",\n              stops: [\n                [90, \"#E0AAFF\"],\n                [120, \"#C77DFF\"],\n                [150, \"#9D4EDD\"],\n                [180, \"#7B2CBF\"],\n                [220, \"#5A189A\"],\n                [250, \"#3C096C\"],\n                [280, \"#240046\"],\n                [300, \"#10002B\"],\n              ],\n            },\n      \"fill-extrusion-height\": 5000,\n    },\n  };\n\n  return (\n    <>\n      <ReactMapGL\n        getCursor={getCursor}\n        {...viewport}\n        onViewportChange={(newviewport) => setViewport(newviewport)}\n        mapStyle={\"mapbox://styles/mapbox/dark-v9\"}\n        mapboxApiAccessToken={\n          \"pk.eyJ1IjoiZGVwcm92NDQ3IiwiYSI6ImNrejV1ZXkxYTBwa3EyeHFmeTE1Mnhvd3MifQ.00kif_tRS2Ij8lUHI_Osdg\"\n        }\n        onClick={(e) => {\n          if (e?.features[0]?.properties?.area_id) {\n            let area_id = e.features[0].properties.area_id;\n            let totalAge = mapData[area_id];\n            setAreaData({\n              female: mapData[area_id].female,\n              male: mapData[area_id].male,\n              totalUsers: mapData[area_id].totalUsers,\n              totalMatches: mapData[area_id].total_matches,\n              areaName: e.features[0].properties.name,\n              revPercentage: mapData[area_id].revPercentage,\n              avgAge: mapData[area_id].totalAge / mapData[area_id].totalUsers,\n              area_id: area_id,\n            });\n          }\n        }}\n      >\n        {areas && (\n          <Source id=\"my-data\" type=\"geojson\" data={areas}>\n            {props.mapType === \"pro\" ? (\n              <Layer {...proLayerStyle} />\n            ) : (\n              <Layer {...generalLayerStyle} />\n            )}\n            <Layer {...highlightLayerStyle} filter={filter} />\n          </Source>\n        )}\n      </ReactMapGL>\n    </>\n  );\n};\n\nexport default Map;\n","import React, { useState } from \"react\";\nimport { Row, Col, Card, Statistic, Tabs } from \"antd\";\nimport styles from \"./Dashboard.module.css\";\nimport Map from \"./Map/Map\";\nimport ReactLoading from \"react-loading\";\nimport {\n  BsGenderFemale,\n  BsGenderMale,\n  BsFillPeopleFill,\n  BsFillHeartFill,\n} from \"react-icons/bs\";\n\nimport { FaRegMoneyBillAlt, FaBirthdayCake } from \"react-icons/fa\";\nimport { MdPlace } from \"react-icons/md\";\n\nconst { TabPane } = Tabs;\n\nconst Dashboard = () => {\n  const [areaData, setAreaData] = useState(null);\n  const [proData, setProData] = useState();\n  const [genData, setGenData] = useState();\n\n  return (\n    <div className={styles.rowStretch}>\n      <Row gutter={[16, 16]} justify=\"center\" align=\"middle\">\n        <Col xs={(24, { order: 2 })} md={12}>\n          <Tabs defaultActiveKey=\"1\" centered>\n            <TabPane tab=\"General Stats\" key=\"1\">\n              {genData != null ? (\n                <Row gutter={[16, 16]}>\n                  <Col span={8}>\n                    <Card\n                      style={{ backgroundColor: \"var(--russian-violet-2\" }}\n                      bordered={false}\n                    >\n                      <Statistic\n                        prefix={<BsGenderFemale />}\n                        title=\"Females\"\n                        value={genData[0].female}\n                      />\n                    </Card>\n                  </Col>\n\n                  <Col span={8}>\n                    <Card\n                      style={{ backgroundColor: \"var(--russian-violet-2\" }}\n                      bordered={false}\n                    >\n                      <Statistic\n                        prefix={<BsFillPeopleFill />}\n                        title=\"Total Users\"\n                        value={genData[0].totalUsers}\n                      />\n                    </Card>\n                  </Col>\n\n                  <Col span={8}>\n                    <Card\n                      style={{ backgroundColor: \"var(--russian-violet-2\" }}\n                      bordered={false}\n                    >\n                      <Statistic\n                        prefix={<BsGenderMale />}\n                        title=\"Males\"\n                        value={genData[0].male}\n                      />\n                    </Card>\n                  </Col>\n\n                  <Col span={8}>\n                    <Card\n                      style={{ backgroundColor: \"var(--russian-violet-2\" }}\n                      bordered={false}\n                    >\n                      <Statistic\n                        prefix={<FaBirthdayCake />}\n                        title=\"Total Pro Users\"\n                        value={proData[0].totalUsers}\n                      />\n                    </Card>\n                  </Col>\n\n                  <Col span={8}>\n                    <Card\n                      style={{ backgroundColor: \"var(--russian-violet-2\" }}\n                      bordered={false}\n                    >\n                      <Statistic\n                        prefix={<BsFillHeartFill />}\n                        title=\"Total Matches\"\n                        value={genData[0].total_matches}\n                      />\n                    </Card>\n                  </Col>\n\n                  <Col span={8}>\n                    <Card\n                      style={{ backgroundColor: \"var(--russian-violet-2\" }}\n                      bordered={false}\n                    >\n                      <Statistic\n                        prefix={<FaRegMoneyBillAlt />}\n                        title=\"Contribution to revenue\"\n                        precision={2}\n                        value={proData[0].totalRevPercentage}\n                        suffix=\"%\"\n                      />\n                    </Card>\n                  </Col>\n\n                  <Col span={24}>\n                    <Card\n                      style={{ backgroundColor: \"var(--russian-violet-2\" }}\n                      bordered={false}\n                    >\n                      <Statistic\n                        prefix={<FaRegMoneyBillAlt />}\n                        title=\"Ratio of Pro Users to Total Users\"\n                        precision={2}\n                        value={proData[0].totalUsers / genData[0].totalUsers}\n                      />\n                    </Card>\n                  </Col>\n                </Row>\n              ) : (\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <ReactLoading type=\"bubbles\" color=\"var(--mauve)\" />\n                </div>\n              )}\n            </TabPane>\n            <TabPane tab=\"Area Specific Stats\" key=\"2\">\n              {areaData != null ? (\n                <Row gutter={[16, 16]} justify=\"center\" align=\"middle\">\n                  <Col span={8}>\n                    <Card\n                      style={{ backgroundColor: \"var(--russian-violet-2\" }}\n                      bordered={false}\n                    >\n                      <Statistic\n                        prefix={<BsGenderFemale />}\n                        title=\"Females\"\n                        value={areaData.female}\n                      />\n                    </Card>\n                  </Col>\n\n                  <Col span={8}>\n                    <Card\n                      style={{ backgroundColor: \"var(--russian-violet-2\" }}\n                      bordered={false}\n                    >\n                      <Statistic\n                        prefix={<BsFillPeopleFill />}\n                        title=\"Total Users\"\n                        value={areaData.totalUsers}\n                      />\n                    </Card>\n                  </Col>\n\n                  <Col span={8}>\n                    <Card\n                      style={{ backgroundColor: \"var(--russian-violet-2\" }}\n                      bordered={false}\n                    >\n                      <Statistic\n                        prefix={<BsGenderMale />}\n                        title=\"Males\"\n                        value={areaData.male}\n                      />\n                    </Card>\n                  </Col>\n\n                  <Col span={16}>\n                    <Card\n                      style={{ backgroundColor: \"var(--russian-violet-2\" }}\n                      bordered={false}\n                    >\n                      <Statistic\n                        prefix={<FaBirthdayCake />}\n                        title=\"Total Pro Users\"\n                        value={proData[areaData.area_id].totalUsers}\n                      />\n                    </Card>\n                  </Col>\n\n                  <Col span={8}>\n                    <Card\n                      style={{ backgroundColor: \"var(--russian-violet-2\" }}\n                      bordered={false}\n                    >\n                      <Statistic\n                        prefix={<BsFillHeartFill />}\n                        title=\"Total Matches\"\n                        value={areaData.totalMatches}\n                      />\n                    </Card>\n                  </Col>\n\n                  <Col span={12}>\n                    <Card\n                      style={{ backgroundColor: \"var(--russian-violet-2\" }}\n                      bordered={false}\n                    >\n                      <Statistic\n                        prefix={<MdPlace />}\n                        title=\"Location\"\n                        value={areaData.areaName}\n                      />\n                    </Card>\n                  </Col>\n\n                  <Col span={12}>\n                    <Card\n                      style={{ backgroundColor: \"var(--russian-violet-2\" }}\n                      bordered={false}\n                    >\n                      <Statistic\n                        prefix={<FaRegMoneyBillAlt />}\n                        title=\"Ratio of Pro Users to Total Users\"\n                        precision={2}\n                        value={\n                          proData[areaData.area_id].totalUsers /\n                          genData[areaData.area_id].totalUsers\n                        }\n                      />\n                    </Card>\n                  </Col>\n\n                  <Col span={8}>\n                    <Card\n                      style={{ backgroundColor: \"var(--russian-violet-2\" }}\n                      bordered={false}\n                    >\n                      <Statistic\n                        prefix={<FaRegMoneyBillAlt />}\n                        title=\"Contribution to revenue\"\n                        precision={2}\n                        value={proData[areaData.area_id].revPercentage}\n                        suffix=\"%\"\n                      />\n                    </Card>\n                  </Col>\n\n                  <Col span={8}>\n                    <Card\n                      style={{ backgroundColor: \"var(--russian-violet-2\" }}\n                      bordered={false}\n                    >\n                      <Statistic\n                        prefix={<FaBirthdayCake />}\n                        title=\"Average User Age\"\n                        value={areaData.avgAge}\n                        precision={2}\n                      />\n                    </Card>\n                  </Col>\n                </Row>\n              ) : (\n                <span>Click on an area from the map</span>\n              )}\n            </TabPane>\n          </Tabs>\n        </Col>\n        <Col\n          xs={(24, { order: 1 })}\n          md={12}\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Card\n            bordered={false}\n            style={{ backgroundColor: \"var(--russian-violet-2\" }}\n          >\n            <Map\n              areaData={areaData}\n              setAreaData={setAreaData}\n              proData={proData}\n              setProData={setProData}\n              genData={genData}\n              setGenData={setGenData}\n            />\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React from \"react\";\nimport { Typography } from \"antd\";\n\nconst { Title } = Typography;\n\nconst About = () => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        height: \"70vh\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n      }}\n    >\n      Made by\n      <Title>\n        <a href=\"https://github.com/anurago9o9\">anurago9o9</a>\n      </Title>\n      Uses AntDesign, React.js, Mapbox\n    </div>\n  );\n};\n\nexport default About;\n","import React, { useState } from \"react\";\nimport \"./App.less\";\nimport { Layout, Menu, Typography } from \"antd\";\nimport {\n  UserOutlined,\n  VideoCameraOutlined,\n  GithubOutlined,\n} from \"@ant-design/icons\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\n\nimport Dashboard from \"./Dashboard/Dashboard\";\nimport About from \"./About/About\";\n\nconst { Title } = Typography;\nconst { Header, Content, Footer, Sider } = Layout;\n\nfunction App() {\n  let [isAbout, setIsAbout] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <Layout>\n        <Sider\n          className=\"bgDark\"\n          breakpoint=\"lg\"\n          collapsedWidth=\"0\"\n          style={{\n            minHeight: \"100vh\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyItems: \"center\",\n          }}\n        >\n          <div className=\"logo\" />\n          <Menu\n            theme=\"dark\"\n            style={{\n              backgroundColor: \"var(--russian-voilet)\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              justifyItems: \"center\",\n            }}\n            mode=\"inline\"\n            defaultSelectedKeys={[\"1\"]}\n          >\n            <Menu.Item\n              key=\"1\"\n              icon={<VideoCameraOutlined />}\n              onClick={() => setIsAbout(false)}\n            >\n              Dashboard\n            </Menu.Item>\n            <Menu.Item\n              key=\"2\"\n              icon={<UserOutlined />}\n              onClick={() => setIsAbout(true)}\n            >\n              About\n            </Menu.Item>\n            <Menu.Item key=\"3\" icon={<GithubOutlined />}>\n              <a href=\"https://github.com/anurago9o9\">Source Code</a>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout className=\"bgDark2\">\n          <Header className=\"bgDark\" style={{ padding: \"10px\" }}>\n            <Title level={2}>{!isAbout ? \"Dashboard\" : \"About\"}</Title>\n          </Header>\n          <Content style={{ margin: \"26px\" }} className=\"bgDark\">\n            <div className=\"bgDark\">{!isAbout ? <Dashboard /> : <About />}</div>\n          </Content>\n          <Footer className=\"bgDark\" style={{ textAlign: \"center\" }}>\n            GeoJSON Analyser\n          </Footer>\n        </Layout>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}